@model LeaveApplication.Models.LeaveSearch
@*@model IEnumerable<LeaveApplication.Models.Leave>*@
@*@model IEnumerable<LeaveApplication.Models.LeaveList>*@

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@if (Request.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("CanCreate") || User.IsInRole("CanEdit")))
{
    <p>@Html.ActionLink("Create New", "Create") | @Html.ActionLink("Upload", "Upload")</p>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Criteria.StartDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextBox("StartDate", "", new { @class = "form-control datefield" })*@
                @Html.TextBoxFor(model => model.Criteria.StartDate, "{0:MM/dd/yyyy}", new { @class = "form-control datefield" })
                @Html.ValidationMessageFor(model => model.Criteria.StartDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Criteria.EndDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextBox("EndDate", "", new { @class = "form-control datefield" })*@
                @Html.TextBoxFor(model => model.Criteria.EndDate, "{0:MM/dd/yyyy}", new { @class = "form-control datefield" })
                @Html.ValidationMessageFor(model => model.Criteria.EndDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Criteria.LTypeID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Criteria.LTypeID, (SelectList)ViewBag.LTypes, "-- All --")
                @*@Html.ValidationMessageFor(model => model.LTypeID)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Criteria.EmployeeID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Criteria.EmployeeID, (SelectList)ViewBag.Employees, "-- All --")
                @*@Html.ValidationMessageFor(model => model.LTypeID)*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>

    </div>

    if (Model.LeaveResults != null && Model.LeaveResults.Count() > 0)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveResultColName.LeaveDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveResultColName.EmployeeID)
                    @*@Html.DisplayNameFor(model => model.Leave.EmployeeID)*@
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveResultColName.LTypeID)
                    @*@Html.DisplayNameFor(model => model.Leave.LTypeName)*@
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveResultColName.ReasonID)
                    @*@Html.DisplayNameFor(model => model.Leave.ReasonDesc)*@
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.LeaveResults)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.LeaveDate)
                    </td>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.EmployeeID)*@
                        @Html.DisplayFor(modelItem => item.EmployeeName)
                    </td>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.LTypeID)*@
                        @Html.DisplayFor(modelItem => item.LTypeName)
                    </td>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.ReasonID)*@
                        @Html.DisplayFor(modelItem => item.ReasonDesc)
                    </td>

                    @if (Request.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("CanEdit")))
                    {
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                            @Html.ActionLink("Copy", "Create", new { id = item.ID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                        </td>
                    }
                </tr>
            }
        </table>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}